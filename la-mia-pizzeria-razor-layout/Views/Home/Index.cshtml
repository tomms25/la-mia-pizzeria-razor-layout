@{
    ViewData["Title"] = "Esercizi Razor";
    Layout = null;

    var firstname = "Andrea";
    var lastname = "De Lisi";

    int Sum(int n)
    {
        int sum = 0;
        for (int i = 0; i <= n; i++)
        {
            sum += i;
        }
        return sum;
    }

    int CountChar(string sentence, char letter)
    {
        return sentence.Count(x => x == letter);
    }

    List<int> numbers = new List<int>();
    for (int i = 0; i < 20; i++)
    {
        var random = new Random();
        int num = random.Next(1, 90);
        numbers.Add(num);
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

<body>
    <ol>
        <!-- 1 -->
        <li>
            <p>
                Dichiarare una variabile valorizzandola con il nostro nome.
                Dichiarare un'altra variabile valorizzandola con il nostro cognome.
                Stampare il nostro nome e cognome all'interno di un tag h2:
            </p>
            <h2>@firstname @lastname</h2>
            <hr>
        </li>
        <!-- 2 -->
        <li>
            <p>
                Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)
                Stampare dentro uno span il risultato:
            </p>
            <span>@Sum(10)</span>
            <hr>
        </li>
        <!-- 3 -->
        <li>
            <p>
                Contare quante volte la lettera a è presente nella frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina:
            </p>
            <span>@CountChar("nel mezzo del cammin di nostra vita", 'a')</span>
            <hr>
        </li>
        <!-- 4 -->
        <li>
            <p>
                Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70:
            </p>
            <div>
                @for (int i = 0; i < numbers.Count; i++)
                {
                    @if (numbers[i] >= 20 && numbers[i] <= 70)
                    {
                        @numbers[i]
                        ;
                        @(i != numbers.Count - 1 ? (" ") : null)
                        ;
                    }
                }
            </div>
            <hr>
        </li>
        <!-- 5 -->
        <li>
            <p>
                Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi:
            </p>
            <span>@(DateTime.Now.ToString("yyyy'-'MM'-'dd' 'HH':'mm':'ss"))</span>
            <hr>
        </li>
        <!-- 6 -->
        <li>
            <p>
                Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina:
            </p>
            <div>La data di 7 giorni fa: @DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd")</div>
            <div>
                Che giorno della settimana è oggi: @DateTime.Now.ToString("dddd", new System.Globalization.CultureInfo("it-IT"))
            </div>
            <div>
                Che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno: @DateTime.Now.AddYears(1).ToString("dddd", new System.Globalization.CultureInfo("it-IT"))
            </div>
            <hr>
        </li>
    </ol>
</body>
</html>